buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0'
    }
}

apply plugin: 'com.android.library'
android {
    compileSdkVersion 30
    ndkVersion '22.1.7171670'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    // Enable generation of Prefab packages and include them in the library's AAR.
    buildFeatures {
        prefabPublishing true
    }

    // Include the "mylibrary" module from the native build system in the AAR,
    // and export the headers in src/main/cpp/include to its consumers
    prefab {
        mylibrary {
            headers "src/main/cpp/include"
        }
    }

    // Avoid packing the unnecessary libraries into final AAR. For details
    // refer to https://issuetracker.google.com/issues/168777344#comment5
    // Note that if your AAR also contains Java/Kotlin APIs, you should not
    // exclude libraries that are used by those APIs.
    packagingOptions {
        exclude("**/libmylibrary.so")
        exclude("**/libc++_shared.so")
    }

}

repositories {
    google()
    mavenCentral()
}